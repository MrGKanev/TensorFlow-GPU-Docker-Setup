# Use the official TensorFlow GPU image with a specific version 
FROM tensorflow/tensorflow:2.11.0-gpu-jupyter

# Set image metadata
LABEL name="tensorflow-gpu-custom"
LABEL maintainer="mail@gkanev.com"
LABEL version="1.0"
LABEL description="TensorFlow GPU image with additional tools for ML"

# Additional NVIDIA environment variables for better performance
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV TF_FORCE_GPU_ALLOW_GROWTH=true
ENV TF_XLA_FLAGS=--tf_xla_enable_xla_devices

# Set better defaults for TensorFlow performance
ENV TF_GPU_THREAD_MODE=gpu_private
ENV TF_GPU_THREAD_COUNT=1

# cuDNN configuration for better performance
ENV TF_CUDNN_RESET_RND_GEN_STATE=false
ENV TF_USE_CUDNN_AUTOTUNE=1

# Set memory allocation to avoid OOM errors
ENV TF_FORCE_UNIFIED_MEMORY=1

# Set a working directory
WORKDIR /app

# Copy requirements and install packages
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    find /usr/local/lib/python3.* -name __pycache__ -type d -exec rm -rf {} +

# Add CUDA Path environment variables
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"

# Copy scripts directory
COPY scripts/ /app/scripts/
RUN chmod +x /app/scripts/*.py

# Add a helpful message when container starts
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'echo "====================================================="' >> /entrypoint.sh && \
    echo 'echo "TensorFlow GPU Container"' >> /entrypoint.sh && \
    echo 'echo "====================================================="' >> /entrypoint.sh && \
    echo 'echo "To verify GPU access, run: python /app/scripts/check_gpu.py"' >> /entrypoint.sh && \
    echo 'echo "Available scripts:"' >> /entrypoint.sh && \
    echo 'echo "  check_gpu.py - Quick GPU verification"' >> /entrypoint.sh && \
    echo 'echo "  test_gpu.py - Comprehensive GPU test suite"' >> /entrypoint.sh && \
    echo 'echo "  tf_benchmark.py - Performance benchmarks"' >> /entrypoint.sh && \
    echo 'echo "  tensorflow_pycharm_fix.py - PyCharm integration fixes"' >> /entrypoint.sh && \
    echo 'echo "====================================================="' >> /entrypoint.sh && \
    echo 'exec "$@"' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]