# Use the official TensorFlow GPU image with a specific version 
FROM tensorflow/tensorflow:2.15.0-gpu-jupyter as base

# Set image metadata
LABEL name="tensorflow-gpu-custom"
LABEL maintainer="mail@gkanev.com"
LABEL version="1.0"
LABEL description="TensorFlow GPU image with additional tools for ML"

# Build stage for additional packages
FROM base as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages in a virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Production stage
FROM base as production

# Create non-root user for security
RUN groupadd -r tensorflow && useradd -r -g tensorflow tensorflow

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set image metadata
LABEL org.opencontainers.image.title="TensorFlow GPU Custom"
LABEL org.opencontainers.image.description="Modern TensorFlow GPU container with security best practices"
LABEL org.opencontainers.image.version="2.0"
LABEL org.opencontainers.image.authors="mail@gkanev.com"
LABEL org.opencontainers.image.source="https://github.com/mrgkanev/tensorflow-gpu-docker"

# Modern environment variables
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV TF_FORCE_GPU_ALLOW_GROWTH=true
ENV TF_ENABLE_ONEDNN_OPTS=1
ENV TF_XLA_FLAGS="--tf_xla_enable_xla_devices --tf_xla_auto_jit=2"

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app directory and set permissions
WORKDIR /app
RUN chown -R tensorflow:tensorflow /app

# Copy application files
COPY --chown=tensorflow:tensorflow . /app/

# Switch to non-root user
USER tensorflow

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import tensorflow as tf; tf.config.list_physical_devices('GPU')" || exit 1

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["bash"]